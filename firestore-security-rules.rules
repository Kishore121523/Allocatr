rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - users can only access their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User preferences - users can only access their own preferences
    match /userPreferences/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Budgets collection - users can only access their own budgets
    match /budgets/{budgetId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Transactions collection - users can only access their own transactions
    match /transactions/{transactionId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Categories collection - if you have shared categories, make them read-only for all users
    // If categories are user-specific, use the same pattern as above
    match /categories/{categoryId} {
      // Option 1: If categories are shared/global (read-only for all authenticated users)
      allow read: if request.auth != null;
      
      // Option 2: If categories are user-specific (uncomment lines below and comment above)
      // allow read, write: if request.auth != null && 
      //   resource.data.userId == request.auth.uid;
      // allow create: if request.auth != null && 
      //   request.resource.data.userId == request.auth.uid;
    }
  }
}
